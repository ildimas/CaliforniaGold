#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è email –Ω–∞ nullable –≤ —Ç–∞–±–ª–∏—Ü–µ users
"""
import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import SQLAlchemyError

# –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DATABASE_URL = os.getenv("DATABASE_URL", "postgresql://postgres:password@localhost:5432/californiagold")

def migrate_email_nullable():
    """–ò–∑–º–µ–Ω—è–µ—Ç –ø–æ–ª–µ email –Ω–∞ nullable"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(DATABASE_URL)
        
        with engine.connect() as connection:
            # –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            trans = connection.begin()
            
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ users
                result = connection.execute(text("""
                    SELECT EXISTS (
                        SELECT FROM information_schema.tables 
                        WHERE table_schema = 'public' 
                        AND table_name = 'users'
                    );
                """))
                
                table_exists = result.scalar()
                
                if not table_exists:
                    print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'users' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                    return False
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—è email
                result = connection.execute(text("""
                    SELECT is_nullable 
                    FROM information_schema.columns 
                    WHERE table_name = 'users' 
                    AND column_name = 'email';
                """))
                
                current_nullable = result.scalar()
                
                if current_nullable == 'YES':
                    print("‚úÖ –ü–æ–ª–µ 'email' —É–∂–µ nullable")
                    return True
                
                print("üîÑ –ò–∑–º–µ–Ω—è–µ–º –ø–æ–ª–µ 'email' –Ω–∞ nullable...")
                
                # –ò–∑–º–µ–Ω—è–µ–º –ø–æ–ª–µ email –Ω–∞ nullable
                connection.execute(text("""
                    ALTER TABLE users 
                    ALTER COLUMN email DROP NOT NULL;
                """))
                
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                trans.commit()
                
                print("‚úÖ –ü–æ–ª–µ 'email' —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ nullable!")
                return True
                
            except SQLAlchemyError as e:
                # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
                trans.rollback()
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è email: {e}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—è email...")
    success = migrate_email_nullable()
    
    if success:
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("üí• –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π!")
        sys.exit(1)
